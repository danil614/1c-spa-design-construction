Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// Берем ссылку опроса клиента в заказ клиента
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОпросКлиента") Тогда
		ОпросКлиента = ДанныеЗаполнения;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ОбновитьИсториюИзмененияСтатусовЗаказа();
	ОбновитьИсториюИзмененияСтатусовЭтапов();
КонецПроцедуры

Процедура ОбновитьИсториюИзмененияСтатусовЗаказа()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИсторияСтатусовЗаказовСрезПоследних.Заказ,
	|	ИсторияСтатусовЗаказовСрезПоследних.СтатусЗаказа,
	|	ИсторияСтатусовЗаказовСрезПоследних.Ответственный
	|ИЗ
	|	РегистрСведений.ИсторияСтатусовЗаказов.СрезПоследних КАК ИсторияСтатусовЗаказовСрезПоследних
	|ГДЕ
	|	ИсторияСтатусовЗаказовСрезПоследних.Заказ = &Заказ
	|	И ИсторияСтатусовЗаказовСрезПоследних.СтатусЗаказа = &СтатусЗаказа
	|	И ИсторияСтатусовЗаказовСрезПоследних.Ответственный = &Ответственный";

	Запрос.УстановитьПараметр("СтатусЗаказа", СтатусЗаказа);
	Запрос.УстановитьПараметр("Заказ", Ссылка);
	Запрос.УстановитьПараметр("Ответственный", Ответственный);

	РезультатЗапроса = Запрос.Выполнить();
	
	// Если нет такой записи в регистре, то добавляем
	Если РезультатЗапроса.Пустой() Тогда
		НоваяЗапись = РегистрыСведений.ИсторияСтатусовЗаказов.СоздатьМенеджерЗаписи();
		НоваяЗапись.Период = ТекущаяДатаСеанса();
		НоваяЗапись.Заказ = Ссылка;
		НоваяЗапись.СтатусЗаказа = СтатусЗаказа;
		НоваяЗапись.Ответственный = Ответственный;
		НоваяЗапись.Записать(Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьИсториюИзмененияСтатусовЭтапов()
	// Выбираем такие статусы этапов из регистра, которые отличаются от документа
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказКлиентаСписокЭтапов.Ссылка КАК Ссылка,
	|	ЗаказКлиентаСписокЭтапов.СтатусЭтапа КАК СтатусЭтапа,
	|	ЗаказКлиентаСписокЭтапов.НомерСтроки КАК НомерЭтапа,
	|	ЗаказКлиентаСписокЭтапов.Услуга КАК Услуга,
	|	ЗаказКлиентаСписокЭтапов.Ссылка.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_СписокЭтапов
	|ИЗ
	|	Документ.ЗаказКлиента.СписокЭтапов КАК ЗаказКлиентаСписокЭтапов
	|ГДЕ
	|	ЗаказКлиентаСписокЭтапов.Ссылка = &Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияСтатусовЭтаповСрезПоследних.Заказ КАК Заказ,
	|	ВТ_СписокЭтапов.СтатусЭтапа КАК СтатусЭтапа,
	|	ВТ_СписокЭтапов.НомерЭтапа КАК НомерЭтапа,
	|	ВТ_СписокЭтапов.Услуга КАК Услуга,
	|	ИсторияСтатусовЭтаповСрезПоследних.Ответственный КАК Ответственный
	|ИЗ
	|	ВТ_СписокЭтапов КАК ВТ_СписокЭтапов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовЭтапов.СрезПоследних КАК ИсторияСтатусовЭтаповСрезПоследних
	|		ПО (ИсторияСтатусовЭтаповСрезПоследних.Заказ = ВТ_СписокЭтапов.Ссылка)
	|		И (ИсторияСтатусовЭтаповСрезПоследних.СтатусЭтапа = ВТ_СписокЭтапов.СтатусЭтапа)
	|		И (ИсторияСтатусовЭтаповСрезПоследних.НомерЭтапа = ВТ_СписокЭтапов.НомерЭтапа)
	|		И (ИсторияСтатусовЭтаповСрезПоследних.Услуга = ВТ_СписокЭтапов.Услуга)
	|		И (ИсторияСтатусовЭтаповСрезПоследних.Ответственный = ВТ_СписокЭтапов.Ответственный)
	|ГДЕ
	|	ИсторияСтатусовЭтаповСрезПоследних.Заказ ЕСТЬ NULL
	|	И ИсторияСтатусовЭтаповСрезПоследних.Ответственный ЕСТЬ NULL";

	Запрос.УстановитьПараметр("Заказ", Ссылка);
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	НачатьТранзакцию();
	Попытка
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = РегистрыСведений.ИсторияСтатусовЭтапов.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период = ТекущаяДатаСеанса();
			НоваяЗапись.Заказ = Ссылка;
			НоваяЗапись.НомерЭтапа = Выборка.НомерЭтапа;
			НоваяЗапись.Услуга = Выборка.Услуга;

			НоваяЗапись.СтатусЭтапа = Выборка.СтатусЭтапа;
			НоваяЗапись.Ответственный = Ответственный;

			НоваяЗапись.Записать(Истина);
		КонецЦикла;

		ЗафиксироватьТранзакцию();
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;

		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка проведения документа. Неудачная попытка изменения истории этапов";
		Сообщение.Сообщить();

		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры