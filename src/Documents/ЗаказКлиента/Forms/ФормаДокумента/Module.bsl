#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЭтапов

&НаКлиенте
Процедура СписокЭтаповКоличествоПриИзменении(Элемент)
	РассчитатьСуммуУслугиПоЦенеИКоличеству();
КонецПроцедуры

&НаКлиенте
Процедура СписокЭтаповЦенаУслугиПриИзменении(Элемент)
	РассчитатьСуммуУслугиПоЦенеИКоличеству();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуУслугиПоЦенеИКоличеству()
	Если Элементы.СписокЭтапов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.СписокЭтапов.ТекущиеДанные;
		Строка = Объект.СписокЭтапов.Получить(ТекущиеДанные.НомерСтроки - 1);
		Строка.СуммаУслуги = ТекущиеДанные.ЦенаУслуги * ТекущиеДанные.Количество;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокМатериалов

&НаКлиенте
Процедура СписокМатериаловКоличествоПриИзменении(Элемент)
	РассчитатьСуммуМатериалаПоЦенеИКоличеству();
КонецПроцедуры

&НаКлиенте
Процедура СписокМатериаловЦенаПриИзменении(Элемент)
	РассчитатьСуммуМатериалаПоЦенеИКоличеству();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуМатериалаПоЦенеИКоличеству()
	Если Элементы.СписокМатериалов.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элементы.СписокМатериалов.ТекущиеДанные;
		Строка = Объект.СписокМатериалов.Получить(ТекущиеДанные.НомерСтроки - 1);
		Строка.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура СформироватьСписокМатериалов(Команда)
	Если Объект.СписокМатериалов.Количество() > 0 Тогда
		ТекстВопроса = "При формировании списка материалов текущий список будет очищен! Продолжить?";
		Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);

		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	СформироватьСписокМатериаловНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦеныНаУслуги(Команда)
	УстановитьЦеныНаУслугиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦеныНаМатериалы(Команда)
	УстановитьЦеныНаМатериалыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуЭтапов(Команда)
	РассчитатьСуммуЗаказаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуМатериалов(Команда)
	РассчитатьСуммуМатериаловНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуЗаказа(Команда)
	РассчитатьСуммуЗаказаНаСервере();
КонецПроцедуры

&НаКлиенте
Асинх Процедура СформироватьГрафикОплат(Команда)
	// Проверяем заполнение поля размер платежа
	Если ЗначениеЗаполнено(РазмерПлатежа) Тогда
		Если Объект.ГрафикОплат.Количество() > 0 Тогда
			ТекстВопроса = "При формировании графика оплат текущий график будет очищен! Продолжить?";
			Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);

			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;

		РассчитатьСуммуЗаказаНаСервере();
		СформироватьГрафикОплатНаСервере();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле = "РазмерПлатежа";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = "Поле ""Размер платежа"" должно быть заполнено";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьСписокМатериаловНаСервере()
	// Очищаем список материалов
	Объект.СписокМатериалов.Очистить();

	// Выбираем списки материалов из услуг
	// Перемножаем количество
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокЭтапов.Услуга,
	|	СписокЭтапов.Количество,
	|	СписокЭтапов.НомерСтроки
	|ПОМЕСТИТЬ ВТ_СписокЭтапов
	|ИЗ
	|	&СписокЭтапов КАК СписокЭтапов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураМатериалы.Номенклатура КАК Материал,
	|	НоменклатураМатериалы.Количество * ВТ_СписокЭтапов.Количество КАК Количество,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ВТ_СписокЭтапов.НомерСтроки КАК НомерЭтапа
	|ИЗ
	|	ВТ_СписокЭтапов КАК ВТ_СписокЭтапов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Материалы КАК НоменклатураМатериалы
	|		ПО ВТ_СписокЭтапов.Услуга = НоменклатураМатериалы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период,) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО НоменклатураМатериалы.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_СписокЭтапов.НомерСтроки,
	|	НоменклатураМатериалы.НомерСтроки";

	Запрос.УстановитьПараметр("СписокЭтапов", Объект.СписокЭтапов.Выгрузить());
	Запрос.УстановитьПараметр("Период", ПолучитьДатуДокумента());
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.СписокМатериалов.Добавить();
		НоваяСтрока.НомерЭтапа = Выборка.НомерЭтапа;
		НоваяСтрока.Материал = Выборка.Материал;
		НоваяСтрока.Количество = Выборка.Количество;
		НоваяСтрока.Цена = Выборка.Цена;
		НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьЦеныНаУслугиНаСервере()
	ПолучениеЦенНоменклатурыВызовСервера.ПолучитьЦеныДляНоменклатуры(Объект.СписокЭтапов, ПолучитьДатуДокумента(),
		"Услуга", "ЦенаУслуги", "Количество", "СуммаУслуги");
КонецПроцедуры

&НаСервере
Процедура УстановитьЦеныНаМатериалыНаСервере()
	ПолучениеЦенНоменклатурыВызовСервера.ПолучитьЦеныДляНоменклатуры(Объект.СписокМатериалов, ПолучитьДатуДокумента(),
		"Материал", "Цена", "Количество", "Сумма");
КонецПроцедуры

&НаСервере
Процедура СформироватьГрафикОплатНаСервере()
	// Очищаем старый график
	Объект.ГрафикОплат.Очистить();

	// Копируем список этапов, чтобы отсортировать его
	СписокЭтапов = Объект.СписокЭтапов.Выгрузить( , "СтоимостьЭтапа, ДатаНачала");
	// Сортируем этапы по дате начала
	СписокЭтапов.Сортировать("ДатаНачала");

	КоличествоДнейДоНачалаЭтапаДляОплаты = Константы.КоличествоДнейДоНачалаЭтапаДляОплаты.Получить();
	НомерЭтапа = 0;

	Пока НомерЭтапа < СписокЭтапов.Количество() Цикл
		// Берем первый этап всегда, так как нужно всегда брать оплату до начала работы
		Этап = СписокЭтапов.Получить(НомерЭтапа);
		ДатаПлатежа = Этап.ДатаНачала - 60 * 60 * 24 * КоличествоДнейДоНачалаЭтапаДляОплаты;
		Оплачено = Этап.СтоимостьЭтапа;

		// Если оплачено меньше, чем предполагаемый размер платежа, то берем следующие этапы
		НомерЭтапа = НомерЭтапа + 1;
		Пока Оплачено < РазмерПлатежа И НомерЭтапа < СписокЭтапов.Количество() Цикл
			Этап = СписокЭтапов.Получить(НомерЭтапа);

			// Если стоимость этапа меньше или равна, чем то, что нужно доплатить
			Если Этап.СтоимостьЭтапа <= (РазмерПлатежа - Оплачено) Тогда
				// Вычитаем всю сумму этапа
				Платеж = Этап.СтоимостьЭтапа;
				НомерЭтапа = НомерЭтапа + 1;
			Иначе
				// Если сумма этапа больше, то берем сумму, которую нужно доплатить
				Платеж = РазмерПлатежа - Оплачено;
				// Ставим остаток от стоимости этапа
				Этап.СтоимостьЭтапа = Этап.СтоимостьЭтапа - Платеж;
			КонецЕсли;

			Оплачено = Оплачено + Платеж;
		КонецЦикла;

		СтрокаГрафик = Объект.ГрафикОплат.Добавить();
		СтрокаГрафик.СуммаПлатежа = Оплачено;
		СтрокаГрафик.ДатаПлатежа = ДатаПлатежа;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуМатериаловНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РассчитатьСуммуМатериалов();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуЗаказаНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РассчитатьСуммуЗаказа();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуДокумента()
	Возврат ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса());
КонецФункции

#КонецОбласти